{
  "version": 3,
  "sources": ["../../@studio-freight/lenis/src/maths.js", "../../@studio-freight/lenis/src/animate.js", "../../@studio-freight/lenis/src/dimensions.js", "../../@studio-freight/lenis/src/debounce.js", "../../@studio-freight/lenis/src/emitter.js", "../../@studio-freight/lenis/src/virtual-scroll.js", "../../@studio-freight/lenis/src/index.js", "dep:@studio-freight_lenis"],
  "sourcesContent": ["// Clamp a value between a minimum and maximum value\r\nexport function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\n// Truncate a floating-point number to a specified number of decimal places\r\nexport function truncate(value, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\n// Linearly interpolate between two values using an amount (0 <= t <= 1)\r\nexport function lerp(x, y, t) {\r\n  return (1 - t) * x + t * y\r\n}\r\n\r\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\nexport function damp(x, y, lambda, dt) {\r\n  return lerp(x, y, 1 - Math.exp(-lambda * dt))\r\n}\r\n\r\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\r\n// https://anguscroll.com/just/just-modulo\r\nexport function modulo(n, d) {\r\n  return ((n % d) + d) % d\r\n}\r\n", "import { clamp, damp } from './maths'\r\n\r\n// Animate class to handle value animations with lerping or easing\r\nexport class Animate {\r\n  // Advance the animation by the given delta time\r\n  advance(deltaTime) {\r\n    if (!this.isRunning) return\r\n\r\n    let completed = false\r\n\r\n    if (this.lerp) {\r\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    }\r\n\r\n    // Call the onUpdate callback with the current value and completed status\r\n    this.onUpdate?.(this.value, { completed })\r\n\r\n    if (completed) {\r\n      this.stop()\r\n    }\r\n  }\r\n\r\n  // Stop the animation\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  // Set up the animation from a starting value to an ending value\r\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\r\n  fromTo(from, to, { lerp = 0.1, duration = 1, easing = (t) => t, onUpdate }) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    this.onUpdate = onUpdate\r\n  }\r\n}\r\n", "import { debounce } from './debounce'\r\n\r\nexport class Dimensions {\r\n  constructor({ wrapper, content, autoResize = true } = {}) {\r\n    this.wrapper = wrapper\r\n    this.content = content\r\n\r\n    if (autoResize) {\r\n      const resize = debounce(this.resize, 250)\r\n\r\n      if (this.wrapper !== window) {\r\n        this.wrapperResizeObserver = new ResizeObserver(resize)\r\n        this.wrapperResizeObserver.observe(this.wrapper)\r\n      }\r\n\r\n      this.contentResizeObserver = new ResizeObserver(resize)\r\n      this.contentResizeObserver.observe(this.content)\r\n    }\r\n\r\n    this.resize()\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperResizeObserver?.disconnect()\r\n    this.contentResizeObserver?.disconnect()\r\n  }\r\n\r\n  resize = () => {\r\n    this.onWrapperResize()\r\n    this.onContentResize()\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.width = window.innerWidth\r\n      this.height = window.innerHeight\r\n    } else {\r\n      this.width = this.wrapper.clientWidth\r\n      this.height = this.wrapper.clientHeight\r\n    }\r\n  }\r\n\r\n  onContentResize = () => {\r\n    this.scrollHeight = this.content.scrollHeight\r\n    this.scrollWidth = this.content.scrollWidth\r\n  }\r\n\r\n  get limit() {\r\n    return {\r\n      x: this.scrollWidth - this.width,\r\n      y: this.scrollHeight - this.height,\r\n    }\r\n  }\r\n}\r\n", "export function debounce(callback, delay) {\r\n  let timer\r\n  return function () {\r\n    let args = arguments\r\n    let context = this\r\n    clearTimeout(timer)\r\n    timer = setTimeout(function () {\r\n      callback.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n", "export class Emitter {\r\n  constructor() {\r\n    this.events = {}\r\n  }\r\n\r\n  emit(event, ...args) {\r\n    let callbacks = this.events[event] || []\r\n    for (let i = 0, length = callbacks.length; i < length; i++) {\r\n      callbacks[i](...args)\r\n    }\r\n  }\r\n\r\n  on(event, cb) {\r\n    // Add the callback to the event's callback list, or create a new list with the callback\r\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\r\n\r\n    // Return an unsubscribe function\r\n    return () => {\r\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.events = {}\r\n  }\r\n}\r\n", "import { Emitter } from './emitter'\r\nimport { clamp } from './maths'\r\n\r\nexport class VirtualScroll {\r\n  constructor(\r\n    element,\r\n    { wheelMultiplier = 1, touchMultiplier = 2, normalizeWheel = false }\r\n  ) {\r\n    this.element = element\r\n    this.wheelMultiplier = wheelMultiplier\r\n    this.touchMultiplier = touchMultiplier\r\n    this.normalizeWheel = normalizeWheel\r\n\r\n    this.touchStart = {\r\n      x: null,\r\n      y: null,\r\n    }\r\n\r\n    this.emitter = new Emitter()\r\n\r\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\r\n    this.element.addEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Add an event listener for the given event and callback\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  // Remove all event listeners and clean up\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    this.element.removeEventListener('wheel', this.onWheel, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchstart' event\r\n  onTouchStart = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n  }\r\n\r\n  // Event handler for 'touchmove' event\r\n  onTouchMove = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(clientX - this.touchStart.x) * this.touchMultiplier\r\n    const deltaY = -(clientY - this.touchStart.y) * this.touchMultiplier\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: deltaX,\r\n      y: deltaY,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      type: 'touch',\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  onTouchEnd = (event) => {\r\n    this.emitter.emit('scroll', {\r\n      type: 'touch',\r\n      inertia: true,\r\n      deltaX: this.lastDelta.x,\r\n      deltaY: this.lastDelta.y,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'wheel' event\r\n  onWheel = (event) => {\r\n    let { deltaX, deltaY } = event\r\n\r\n    if (this.normalizeWheel) {\r\n      deltaX = clamp(-100, deltaX, 100)\r\n      deltaY = clamp(-100, deltaY, 100)\r\n    }\r\n\r\n    deltaX *= this.wheelMultiplier\r\n    deltaY *= this.wheelMultiplier\r\n\r\n    this.emitter.emit('scroll', { type: 'wheel', deltaX, deltaY, event })\r\n  }\r\n}\r\n", "import { version } from '../package.json'\r\nimport { Animate } from './animate'\r\nimport { Dimensions } from './dimensions'\r\nimport { Emitter } from './emitter'\r\nimport { clamp, modulo } from './maths'\r\nimport { VirtualScroll } from './virtual-scroll'\r\n\r\n// Technical explaination\r\n// - listen to 'wheel' events\r\n// - prevent 'wheel' event to prevent scroll\r\n// - normalize wheel delta\r\n// - add delta to targetScroll\r\n// - animate scroll to targetScroll (smooth context)\r\n// - if animation is not running, listen to 'scroll' events (native context)\r\n\r\nexport default class Lenis {\r\n  // isScrolling = true when scroll is animating\r\n  // isStopped = true if user should not be able to scroll - enable/disable programatically\r\n  // isSmooth = true if scroll should be animated\r\n  // isLocked = same as isStopped but enabled/disabled when scroll reaches target\r\n\r\n  /**\r\n   * @typedef {(t: number) => number} EasingFunction\r\n   * @typedef {'vertical' | 'horizontal'} Orientation\r\n   * @typedef {'vertical' | 'horizontal' | 'both'} GestureOrientation\r\n   *\r\n   * @typedef LenisOptions\r\n   * @property {Window | HTMLElement} [wrapper]\r\n   * @property {HTMLElement} [content]\r\n   * @property {Window | HTMLElement} [wheelEventsTarget]\r\n   * @property {boolean} [smoothWheel]\r\n   * @property {boolean} [smoothTouch]\r\n   * @property {boolean} [syncTouch]\r\n   * @property {number} [syncTouchLerp]\r\n   * @property {number} [touchInertiaMultiplier]\r\n   * @property {number} [duration]\r\n   * @property {EasingFunction} [easing]\r\n   * @property {number} [lerp]\r\n   * @property {boolean} [infinite]\r\n   * @property {Orientation} [orientation]\r\n   * @property {GestureOrientation} [gestureOrientation]\r\n   * @property {number} [touchMultiplier]\r\n   * @property {number} [wheelMultiplier]\r\n   * @property {boolean} [normalizeWheel]\r\n   * @property {boolean} [autoResize]\r\n   *\r\n   * @param {LenisOptions}\r\n   */\r\n  constructor({\r\n    wrapper = window,\r\n    content = document.documentElement,\r\n    wheelEventsTarget = wrapper,\r\n    smoothWheel = true,\r\n    smoothTouch = false,\r\n    syncTouch = false,\r\n    syncTouchLerp = 0.1,\r\n    __iosNoInertiaSyncTouchLerp = 0.4, // should be 1 but had to leave 0.4 for iOS (testing purpose)\r\n    touchInertiaMultiplier = 35,\r\n    duration, // in seconds\r\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n    lerp = duration && 0.1,\r\n    infinite = false,\r\n    orientation = 'vertical', // vertical, horizontal\r\n    gestureOrientation = 'vertical', // vertical, horizontal, both\r\n    touchMultiplier = 1,\r\n    wheelMultiplier = 1,\r\n    normalizeWheel = false,\r\n    autoResize = true,\r\n  } = {}) {\r\n    window.lenisVersion = version\r\n\r\n    // if wrapper is html or body, fallback to window\r\n    if (wrapper === document.documentElement || wrapper === document.body) {\r\n      wrapper = window\r\n    }\r\n\r\n    this.options = {\r\n      wrapper,\r\n      content,\r\n      wheelEventsTarget,\r\n      smoothWheel,\r\n      smoothTouch,\r\n      syncTouch,\r\n      syncTouchLerp,\r\n      __iosNoInertiaSyncTouchLerp,\r\n      touchInertiaMultiplier,\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      infinite,\r\n      gestureOrientation,\r\n      orientation,\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n      autoResize,\r\n    }\r\n\r\n    this.dimensions = new Dimensions({ wrapper, content, autoResize })\r\n    this.rootElement.classList.add('lenis')\r\n\r\n    this.velocity = 0\r\n    this.isStopped = false\r\n    this.isSmooth = smoothWheel || smoothTouch\r\n    this.isScrolling = false\r\n    this.targetScroll = this.animatedScroll = this.actualScroll\r\n    this.animate = new Animate()\r\n    this.emitter = new Emitter()\r\n\r\n    this.options.wrapper.addEventListener('scroll', this.onScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll = new VirtualScroll(wheelEventsTarget, {\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n    })\r\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\r\n  }\r\n\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    this.options.wrapper.removeEventListener('scroll', this.onScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.destroy()\r\n    this.dimensions.destroy()\r\n\r\n    this.rootElement.classList.remove('lenis')\r\n    this.rootElement.classList.remove('lenis-smooth')\r\n    this.rootElement.classList.remove('lenis-scrolling')\r\n    this.rootElement.classList.remove('lenis-stopped')\r\n  }\r\n\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  off(event, callback) {\r\n    this.emitter.events[event] = this.emitter.events[event]?.filter(\r\n      (i) => callback !== i\r\n    )\r\n  }\r\n\r\n  setScroll(scroll) {\r\n    // apply scroll value immediately\r\n    if (this.isHorizontal) {\r\n      this.rootElement.scrollLeft = scroll\r\n    } else {\r\n      this.rootElement.scrollTop = scroll\r\n    }\r\n  }\r\n\r\n  onVirtualScroll = ({ type, inertia, deltaX, deltaY, event }) => {\r\n    // keep zoom feature\r\n    if (event.ctrlKey) return\r\n\r\n    const isTouch = type === 'touch'\r\n    const isWheel = type === 'wheel'\r\n\r\n    if (\r\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) || // trackpad previous/next page gesture\r\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0) ||\r\n      (isTouch &&\r\n        this.options.gestureOrientation === 'vertical' &&\r\n        this.scroll === 0 &&\r\n        !this.options.infinite &&\r\n        deltaY <= 0) // touch pull to refresh\r\n    )\r\n      return\r\n\r\n    // catch if scrolling on nested scroll elements\r\n    if (\r\n      !!event\r\n        .composedPath()\r\n        .find(\r\n          (node) =>\r\n            node?.hasAttribute?.('data-lenis-prevent') ||\r\n            (isTouch && node?.hasAttribute?.('data-lenis-prevent-touch')) ||\r\n            (isWheel && node?.hasAttribute?.('data-lenis-prevent-wheel'))\r\n        )\r\n    )\r\n      return\r\n\r\n    if (this.isStopped || this.isLocked) {\r\n      event.preventDefault()\r\n      return\r\n    }\r\n\r\n    this.isSmooth =\r\n      ((this.options.smoothTouch || this.options.syncTouch) && isTouch) ||\r\n      (this.options.smoothWheel && isWheel)\r\n\r\n    if (!this.isSmooth) {\r\n      this.isScrolling = false\r\n      this.animate.stop()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    let delta = deltaY\r\n    if (this.options.gestureOrientation === 'both') {\r\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\r\n    } else if (this.options.gestureOrientation === 'horizontal') {\r\n      delta = deltaX\r\n    }\r\n\r\n    const syncTouch = isTouch && this.options.syncTouch\r\n    const hasTouchInertia = isTouch && inertia && Math.abs(delta) > 1\r\n    if (hasTouchInertia) {\r\n      delta = this.velocity * this.options.touchInertiaMultiplier\r\n    }\r\n\r\n    this.scrollTo(this.targetScroll + delta, {\r\n      programmatic: false,\r\n      ...(syncTouch && {\r\n        lerp: hasTouchInertia\r\n          ? this.syncTouchLerp\r\n          : this.options.__iosNoInertiaSyncTouchLerp,\r\n      }),\r\n    })\r\n  }\r\n\r\n  resize() {\r\n    this.dimensions.resize()\r\n  }\r\n\r\n  emit() {\r\n    this.emitter.emit('scroll', this)\r\n  }\r\n\r\n  onScroll = () => {\r\n    if (!this.isScrolling) {\r\n      const lastScroll = this.animatedScroll\r\n      this.animatedScroll = this.targetScroll = this.actualScroll\r\n      this.velocity = 0\r\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\r\n      this.emit()\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.isLocked = false\r\n    this.isScrolling = false\r\n    this.velocity = 0\r\n    this.animate.stop()\r\n  }\r\n\r\n  start() {\r\n    this.isStopped = false\r\n\r\n    this.reset()\r\n  }\r\n\r\n  stop() {\r\n    this.isStopped = true\r\n    this.animate.stop()\r\n\r\n    this.reset()\r\n  }\r\n\r\n  raf(time) {\r\n    const deltaTime = time - (this.time || time)\r\n    this.time = time\r\n\r\n    this.animate.advance(deltaTime * 0.001)\r\n  }\r\n\r\n  scrollTo(\r\n    target,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      lock = false,\r\n      duration = this.options.duration,\r\n      easing = this.options.easing,\r\n      lerp = !duration && this.options.lerp,\r\n      onComplete = null,\r\n      force = false, // scroll even if stopped\r\n      programmatic = true, // called from outside of the class\r\n    } = {}\r\n  ) {\r\n    if (this.isStopped && !force) return\r\n\r\n    // keywords\r\n    if (['top', 'left', 'start'].includes(target)) {\r\n      target = 0\r\n    } else if (['bottom', 'right', 'end'].includes(target)) {\r\n      target = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      }\r\n\r\n      if (node) {\r\n        if (this.options.wrapper !== window) {\r\n          // nested scroll offset correction\r\n          const wrapperRect = this.options.wrapper.getBoundingClientRect()\r\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\r\n        }\r\n\r\n        const rect = node.getBoundingClientRect()\r\n\r\n        target =\r\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\r\n      }\r\n    }\r\n\r\n    if (typeof target !== 'number') return\r\n\r\n    target += offset\r\n    target = Math.round(target)\r\n\r\n    if (this.options.infinite) {\r\n      if (programmatic) {\r\n        this.targetScroll = this.animatedScroll = this.scroll\r\n      }\r\n    } else {\r\n      target = clamp(0, target, this.limit)\r\n    }\r\n\r\n    if (immediate) {\r\n      this.animatedScroll = this.targetScroll = target\r\n      this.setScroll(this.scroll)\r\n      this.reset()\r\n      this.emit()\r\n      onComplete?.()\r\n      return\r\n    }\r\n\r\n    if (!programmatic) {\r\n      if (target === this.targetScroll) return\r\n\r\n      this.targetScroll = target\r\n    }\r\n\r\n    this.animate.fromTo(this.animatedScroll, target, {\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      onUpdate: (value, { completed }) => {\r\n        // started\r\n        if (lock) this.isLocked = true\r\n        this.isScrolling = true\r\n\r\n        // updated\r\n        this.velocity = value - this.animatedScroll\r\n        this.direction = Math.sign(this.velocity)\r\n\r\n        this.animatedScroll = value\r\n        this.setScroll(this.scroll)\r\n\r\n        if (programmatic) {\r\n          // wheel during programmatic should stop it\r\n          this.targetScroll = value\r\n        }\r\n\r\n        // completed\r\n        if (completed) {\r\n          if (lock) this.isLocked = false\r\n          requestAnimationFrame(() => {\r\n            //avoid double scroll event\r\n            this.isScrolling = false\r\n          })\r\n          this.velocity = 0\r\n          onComplete?.()\r\n        }\r\n\r\n        this.emit()\r\n      },\r\n    })\r\n  }\r\n\r\n  get rootElement() {\r\n    return this.options.wrapper === window\r\n      ? this.options.content\r\n      : this.options.wrapper\r\n  }\r\n\r\n  get limit() {\r\n    return this.dimensions.limit[this.isHorizontal ? 'x' : 'y']\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.options.orientation === 'horizontal'\r\n  }\r\n\r\n  get actualScroll() {\r\n    // value browser takes into account\r\n    return this.isHorizontal\r\n      ? this.rootElement.scrollLeft\r\n      : this.rootElement.scrollTop\r\n  }\r\n\r\n  get scroll() {\r\n    return this.options.infinite\r\n      ? modulo(this.animatedScroll, this.limit)\r\n      : this.animatedScroll\r\n  }\r\n\r\n  get progress() {\r\n    // avoid progress to be NaN\r\n    return this.limit === 0 ? 1 : this.scroll / this.limit\r\n  }\r\n\r\n  get isSmooth() {\r\n    return this.__isSmooth\r\n  }\r\n\r\n  set isSmooth(value) {\r\n    if (this.__isSmooth !== value) {\r\n      this.rootElement.classList.toggle('lenis-smooth', value)\r\n      this.__isSmooth = value\r\n    }\r\n  }\r\n\r\n  get isScrolling() {\r\n    return this.__isScrolling\r\n  }\r\n\r\n  set isScrolling(value) {\r\n    if (this.__isScrolling !== value) {\r\n      this.rootElement.classList.toggle('lenis-scrolling', value)\r\n      this.__isScrolling = value\r\n    }\r\n  }\r\n\r\n  get isStopped() {\r\n    return this.__isStopped\r\n  }\r\n\r\n  set isStopped(value) {\r\n    if (this.__isStopped !== value) {\r\n      this.rootElement.classList.toggle('lenis-stopped', value)\r\n      this.__isStopped = value\r\n    }\r\n  }\r\n}\r\n", "import d from \"./node_modules/@studio-freight/lenis/dist/lenis.mjs\";export default d;"],
  "mappings": "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",
  "names": ["clamp", "min", "input", "max", "Math", "Animate", "_proto", "prototype", "advance", "deltaTime", "_this$onUpdate", "x", "y", "t", "this", "isRunning", "completed", "lerp", "value", "to", "exp", "round", "currentTime", "linearProgress", "duration", "easedProgress", "easing", "from", "onUpdate", "call", "stop", "fromTo", "_ref", "_ref$lerp", "_ref$duration", "_ref$easing", "Dimensions", "_temp", "_this", "callback", "timer", "wrapper", "content", "_ref$autoResize", "autoResize", "resize", "onWrapperResize", "onContentResize", "window", "width", "innerWidth", "height", "innerHeight", "clientWidth", "clientHeight", "scrollHeight", "scrollWidth", "args", "arguments", "context", "clearTimeout", "setTimeout", "apply", "wrapperResizeObserver", "ResizeObserver", "observe", "contentResizeObserver", "destroy", "_this$wrapperResizeOb", "_this$contentResizeOb", "disconnect", "_createClass", "key", "get", "Emitter", "events", "emit", "event", "callbacks", "i", "length", "slice", "on", "cb", "_this$events$event", "push", "_this$events$event2", "filter", "VirtualScroll", "element", "_ref$wheelMultiplier", "wheelMultiplier", "_ref$touchMultiplier", "touchMultiplier", "_ref$normalizeWheel", "normalizeWheel", "onTouchStart", "_ref2", "targetTouches", "clientY", "touchStart", "clientX", "lastDelta", "onTouchMove", "_ref3", "deltaX", "deltaY", "emitter", "type", "onTouchEnd", "inertia", "onWheel", "addEventListener", "passive", "removeEventListener", "Lenis", "_ref$wrapper", "_ref$content", "document", "documentElement", "_ref$wheelEventsTarge", "wheelEventsTarget", "_ref$smoothWheel", "smoothWheel", "_ref$smoothTouch", "smoothTouch", "_ref$syncTouch", "syncTouch", "_ref$syncTouchLerp", "syncTouchLerp", "_ref$__iosNoInertiaSy", "__iosNoInertiaSyncTouchLerp", "_ref$touchInertiaMult", "touchInertiaMultiplier", "pow", "_ref$infinite", "infinite", "_ref$orientation", "orientation", "_ref$gestureOrientati", "gestureOrientation", "onVirtualScroll", "ctrlKey", "isTouch", "isWheel", "options", "scroll", "composedPath", "find", "node", "hasAttribute", "isStopped", "isLocked", "preventDefault", "isSmooth", "isScrolling", "animate", "delta", "abs", "hasTouchInertia", "velocity", "scrollTo", "targetScroll", "_extends", "programmatic", "onScroll", "lastScroll", "animatedScroll", "actualScroll", "direction", "sign", "lenisVersion", "body", "dimensions", "rootElement", "classList", "add", "virtualScroll", "remove", "off", "_this$emitter$events$", "setScroll", "isHorizontal", "scrollLeft", "scrollTop", "reset", "start", "raf", "time", "target", "_temp2", "_this2", "_ref3$offset", "offset", "_ref3$immediate", "immediate", "_ref3$lock", "lock", "_ref3$duration", "_ref3$easing", "_ref3$lerp", "_ref3$onComplete", "onComplete", "_ref3$force", "force", "_ref3$programmatic", "includes", "limit", "_target", "querySelector", "nodeType", "wrapperRect", "getBoundingClientRect", "left", "top", "rect", "_ref4", "requestAnimationFrame", "d", "__isSmooth", "set", "toggle", "__isScrolling", "__isStopped"]
}
